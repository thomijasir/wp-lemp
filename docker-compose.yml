services:
  nginx:
    container_name: ${CONTAINER_NAME}_nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    restart: unless-stopped
    env_file: .env
    environment:
      HOSTNAME: ${HOSTNAME}
    ports:
      - '8080:80'
      - '443:443'
    volumes:
      - wordpress:/var/www/html
    networks:
      - internal

  wordpress:
    depends_on:
      - database
    container_name: ${CONTAINER_NAME}_wordpress
    image: wordpress:6.6.1-fpm-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      WORDPRESS_DB_HOST: database:3306 # use the same name as database service
      WORDPRESS_DB_NAME: '${DATABASE_NAME}'
      WORDPRESS_DB_USER: '${DATABASE_USER}'
      WORDPRESS_DB_PASSWORD: '${DATABASE_PASSWORD}'
      WP_REDIS_HOST: redis
      WP_REDIS_PORT: 6379
    volumes:
      - wordpress:/var/www/html
    networks:
      - internal

  database:
    container_name: ${CONTAINER_NAME}_database
    image: mysql:8.0
    restart: unless-stopped
    env_file: .env
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_USER: ${DATABASE_USER}
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u',
          'root',
          '-p$$DATABASE_ROOT_PASSWORD',
        ]
      timeout: 10m
      retries: 10
    ports:
      - '3306:3306'
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - internal

  redis:
    container_name: ${CONTAINER_NAME}_cache
    image: redis:6.2-alpine
    restart: unless-stopped
    volumes:
      - redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5m
      timeout: 5s
      retries: 5
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    networks:
      - internal
    labels:
      - 'Redis cache for WordPress'

volumes:
  dbdata:
  wordpress:
  redis:

networks:
  internal:
    driver: bridge
